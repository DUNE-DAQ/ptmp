#+title: PTMP

Prototype Trigger Message Passing aka Pretty Temporary

* What's here?

This package a simple API to sink and source trigger messages while
supporting a rich and high performance, but intentionally simplified,
ZeroMQ based data flow network defined by user configuration.  As this network is based on ZeroMQ it may exist over a mix of transports (inter-thread, inter-process and inter-computer) as determined by the configuration.

* Messages

The messages supported by PTMP are defined in terms of ZeroMQ frames.  The first frame is an integer giving the message type.  The second and subsequent frame contents depend on that message type.  The message types are:

1) a set of TPs, frame 2 is a serialized ~TPSet~ protobuf.

2) waveform data, currently not supported.

* Configuration

The PTMP API classes require a string which specifies details about
their connection to the PTMP network.  This string is in JSON format
and expressing a object (dictionary) with the following attributes.

- socket :: a socket configuration object.

Additional attributes may be added in the future.  The ~socket~ object
has the following attributes:

- type :: a ZeroMQ socket type name ("PAIR", "PUB", "SUB", etc)
- bind :: an array of addresses in canonical ZeroMQ form that the socket should bind
- connect :: an array of addresses in canonical ZeroMQ form that the socket should connect

ZeroMQ restrictions apply.  For example a PAIR socket may only bind or connect to one address.  Others can bind or connect to multiple addresses.

* TODO

- [X] message schema
- [X] initial build system
- [X] travis ci hookup
- [X] add and cleanup dynamic factory from dexnet
- [X] add JSON library
- [ ] write sender/receiver API classes
- [ ] define configuration schema
- [ ] write initial pub/sub actors
- [ ] test program with direct sender/receiver connection
- [ ] test program with pub/sub
- [ ] test program that demonstrates a second sub
- [ ] test that deploys/runs the above 
- [ ] rate test with ~inproc~, ~ipc~ and ~tcp~
- [ ] push/pull test

